// Generated by view binder compiler. Do not edit!
package com.mizoo.askar.calculator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mizoo.askar.calculator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btn0;

  @NonNull
  public final Button btn00;

  @NonNull
  public final Button btn1;

  @NonNull
  public final Button btn2;

  @NonNull
  public final Button btn3;

  @NonNull
  public final Button btn4;

  @NonNull
  public final Button btn5;

  @NonNull
  public final Button btn6;

  @NonNull
  public final Button btn7;

  @NonNull
  public final Button btn8;

  @NonNull
  public final Button btn9;

  @NonNull
  public final Button btnBackspace;

  @NonNull
  public final Button btnClear;

  @NonNull
  public final Button btnDivide;

  @NonNull
  public final Button btnDot;

  @NonNull
  public final Button btnEqual;

  @NonNull
  public final Button btnMinus;

  @NonNull
  public final Button btnModule;

  @NonNull
  public final Button btnMultiply;

  @NonNull
  public final Button btnPlus;

  @NonNull
  public final LinearLayout buttonLayout;

  @NonNull
  public final Guideline guideline1;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final Guideline guideline3;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   *   <li>layout-large/</li>
   *   <li>layout-large-land/</li>
   *   <li>layout-normal/</li>
   *   <li>layout-normal-land/</li>
   *   <li>layout-small/</li>
   *   <li>layout-small-land/</li>
   *   <li>layout-xlarge/</li>
   *   <li>layout-xlarge-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView input;

  @NonNull
  public final TextView output;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   *   <li>layout-large/</li>
   *   <li>layout-large-land/</li>
   *   <li>layout-normal/</li>
   *   <li>layout-normal-land/</li>
   *   <li>layout-small/</li>
   *   <li>layout-small-land/</li>
   *   <li>layout-xlarge/</li>
   *   <li>layout-xlarge-land/</li>
   * </ul>
   */
  @Nullable
  public final TextView tvMyInput;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button btn0,
      @NonNull Button btn00, @NonNull Button btn1, @NonNull Button btn2, @NonNull Button btn3,
      @NonNull Button btn4, @NonNull Button btn5, @NonNull Button btn6, @NonNull Button btn7,
      @NonNull Button btn8, @NonNull Button btn9, @NonNull Button btnBackspace,
      @NonNull Button btnClear, @NonNull Button btnDivide, @NonNull Button btnDot,
      @NonNull Button btnEqual, @NonNull Button btnMinus, @NonNull Button btnModule,
      @NonNull Button btnMultiply, @NonNull Button btnPlus, @NonNull LinearLayout buttonLayout,
      @NonNull Guideline guideline1, @NonNull Guideline guideline2, @NonNull Guideline guideline3,
      @Nullable TextView input, @NonNull TextView output, @Nullable TextView tvMyInput) {
    this.rootView = rootView;
    this.btn0 = btn0;
    this.btn00 = btn00;
    this.btn1 = btn1;
    this.btn2 = btn2;
    this.btn3 = btn3;
    this.btn4 = btn4;
    this.btn5 = btn5;
    this.btn6 = btn6;
    this.btn7 = btn7;
    this.btn8 = btn8;
    this.btn9 = btn9;
    this.btnBackspace = btnBackspace;
    this.btnClear = btnClear;
    this.btnDivide = btnDivide;
    this.btnDot = btnDot;
    this.btnEqual = btnEqual;
    this.btnMinus = btnMinus;
    this.btnModule = btnModule;
    this.btnMultiply = btnMultiply;
    this.btnPlus = btnPlus;
    this.buttonLayout = buttonLayout;
    this.guideline1 = guideline1;
    this.guideline2 = guideline2;
    this.guideline3 = guideline3;
    this.input = input;
    this.output = output;
    this.tvMyInput = tvMyInput;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn0;
      Button btn0 = ViewBindings.findChildViewById(rootView, id);
      if (btn0 == null) {
        break missingId;
      }

      id = R.id.btn00;
      Button btn00 = ViewBindings.findChildViewById(rootView, id);
      if (btn00 == null) {
        break missingId;
      }

      id = R.id.btn1;
      Button btn1 = ViewBindings.findChildViewById(rootView, id);
      if (btn1 == null) {
        break missingId;
      }

      id = R.id.btn2;
      Button btn2 = ViewBindings.findChildViewById(rootView, id);
      if (btn2 == null) {
        break missingId;
      }

      id = R.id.btn3;
      Button btn3 = ViewBindings.findChildViewById(rootView, id);
      if (btn3 == null) {
        break missingId;
      }

      id = R.id.btn4;
      Button btn4 = ViewBindings.findChildViewById(rootView, id);
      if (btn4 == null) {
        break missingId;
      }

      id = R.id.btn5;
      Button btn5 = ViewBindings.findChildViewById(rootView, id);
      if (btn5 == null) {
        break missingId;
      }

      id = R.id.btn6;
      Button btn6 = ViewBindings.findChildViewById(rootView, id);
      if (btn6 == null) {
        break missingId;
      }

      id = R.id.btn7;
      Button btn7 = ViewBindings.findChildViewById(rootView, id);
      if (btn7 == null) {
        break missingId;
      }

      id = R.id.btn8;
      Button btn8 = ViewBindings.findChildViewById(rootView, id);
      if (btn8 == null) {
        break missingId;
      }

      id = R.id.btn9;
      Button btn9 = ViewBindings.findChildViewById(rootView, id);
      if (btn9 == null) {
        break missingId;
      }

      id = R.id.btnBackspace;
      Button btnBackspace = ViewBindings.findChildViewById(rootView, id);
      if (btnBackspace == null) {
        break missingId;
      }

      id = R.id.btnClear;
      Button btnClear = ViewBindings.findChildViewById(rootView, id);
      if (btnClear == null) {
        break missingId;
      }

      id = R.id.btnDivide;
      Button btnDivide = ViewBindings.findChildViewById(rootView, id);
      if (btnDivide == null) {
        break missingId;
      }

      id = R.id.btnDot;
      Button btnDot = ViewBindings.findChildViewById(rootView, id);
      if (btnDot == null) {
        break missingId;
      }

      id = R.id.btnEqual;
      Button btnEqual = ViewBindings.findChildViewById(rootView, id);
      if (btnEqual == null) {
        break missingId;
      }

      id = R.id.btnMinus;
      Button btnMinus = ViewBindings.findChildViewById(rootView, id);
      if (btnMinus == null) {
        break missingId;
      }

      id = R.id.btnModule;
      Button btnModule = ViewBindings.findChildViewById(rootView, id);
      if (btnModule == null) {
        break missingId;
      }

      id = R.id.btnMultiply;
      Button btnMultiply = ViewBindings.findChildViewById(rootView, id);
      if (btnMultiply == null) {
        break missingId;
      }

      id = R.id.btnPlus;
      Button btnPlus = ViewBindings.findChildViewById(rootView, id);
      if (btnPlus == null) {
        break missingId;
      }

      id = R.id.buttonLayout;
      LinearLayout buttonLayout = ViewBindings.findChildViewById(rootView, id);
      if (buttonLayout == null) {
        break missingId;
      }

      id = R.id.guideline1;
      Guideline guideline1 = ViewBindings.findChildViewById(rootView, id);
      if (guideline1 == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.guideline3;
      Guideline guideline3 = ViewBindings.findChildViewById(rootView, id);
      if (guideline3 == null) {
        break missingId;
      }

      id = R.id.input;
      TextView input = ViewBindings.findChildViewById(rootView, id);

      id = R.id.output;
      TextView output = ViewBindings.findChildViewById(rootView, id);
      if (output == null) {
        break missingId;
      }

      id = R.id.tvMyInput;
      TextView tvMyInput = ViewBindings.findChildViewById(rootView, id);

      return new ActivityMainBinding((ConstraintLayout) rootView, btn0, btn00, btn1, btn2, btn3,
          btn4, btn5, btn6, btn7, btn8, btn9, btnBackspace, btnClear, btnDivide, btnDot, btnEqual,
          btnMinus, btnModule, btnMultiply, btnPlus, buttonLayout, guideline1, guideline2,
          guideline3, input, output, tvMyInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
